1. A one-liner (exactly 1 sentence) that describes your project.
Fly forwards and avoid obstacles with your jetpack to get as far as possible in this action-packed 2D game, where you can upgrade your jetpack, save your progress and beat your high score.

2. A list of points (about 5-10 sentences) that describes how your project meets each of the requirement criteria.

a. Requirement 1: We will use either the arrow keys or the mouse position to move the player and maneuver around obstacles.
b. Requirement 2: We will incorporate non-blocking concurrent processing to update the player’s position and items in the background as the player moves forward. (communicate with outside server or saving game state,  use API)
c. Requirement 3: The player’s state is updated as the game progresses, such as the player’s speed. The player’s speed will become increasingly fast. We can also keep track of the player’s accumulated coins so far.
d. Requirement 4: The self-managing iterable data structure will involve adding obstacles to the collection of obstacles and removing them after the player has passed them.

3. Answers to the below group discussion items
    1. Meetings times: every Monday  1:30pm - 3:30pm
    2. Communication: Discord group

    3. Roles:
        a. Project Manager & Test Maker: Jeevan
        b. System Designer: Michelle
        c. Architect: Lisa
        d. Backend: Mangat
        e. UI/UX: Aditya
    4. Expectations:
        a. Communicate clearly and document our code clearly
        b. We want a 10/10 project
        c. Everyone is responsible for making a part of the project unique







Ideas:

Doom game with generated levels
	Hotline miami

Jetpack Joyride

Code to UML Diagram



Meetings time:
Communication, roles, and expectations


